package it.cnr.jada.util.sql;

import java.io.Serializable;
import java.sql.*;

// Referenced classes of package it.cnr.jada.util.sql:
//            LoggedConnection

class LoggedStatement
    implements Serializable, Statement
{

    LoggedStatement(LoggedConnection loggedconnection, Statement statement1)
    {
        connection = loggedconnection;
        statement = statement1;
    }

    public void addBatch(String s)
        throws SQLException
    {
        statement.addBatch(s);
    }

    public void cancel()
        throws SQLException
    {
        statement.cancel();
    }

    public void clearBatch()
        throws SQLException
    {
        statement.clearBatch();
    }

    public void clearWarnings()
        throws SQLException
    {
        statement.clearWarnings();
    }

    public void close()
        throws SQLException
    {
        statement.close();
    }

    public boolean execute(String s)
        throws SQLException
    {
        connection.trace(s);
        return statement.execute(s);
    }

    public int[] executeBatch()
        throws SQLException
    {
        return statement.executeBatch();
    }

    public ResultSet executeQuery(String s)
        throws SQLException
    {
        connection.trace(s);
        return statement.executeQuery(s);
    }

    public int executeUpdate(String s)
        throws SQLException
    {
        connection.trace(s);
        return statement.executeUpdate(s);
    }

    public Connection getConnection()
        throws SQLException
    {
        return connection;
    }

    public int getFetchDirection()
        throws SQLException
    {
        return statement.getFetchDirection();
    }

    public int getFetchSize()
        throws SQLException
    {
        return statement.getFetchSize();
    }

    public int getMaxFieldSize()
        throws SQLException
    {
        return statement.getMaxFieldSize();
    }

    public int getMaxRows()
        throws SQLException
    {
        return statement.getMaxRows();
    }

    public boolean getMoreResults()
        throws SQLException
    {
        return statement.getMoreResults();
    }

    public int getQueryTimeout()
        throws SQLException
    {
        return statement.getQueryTimeout();
    }

    public ResultSet getResultSet()
        throws SQLException
    {
        return statement.getResultSet();
    }

    public int getResultSetConcurrency()
        throws SQLException
    {
        return statement.getResultSetConcurrency();
    }

    public int getResultSetType()
        throws SQLException
    {
        return statement.getResultSetType();
    }

    public int getUpdateCount()
        throws SQLException
    {
        return statement.getUpdateCount();
    }

    public SQLWarning getWarnings()
        throws SQLException
    {
        return statement.getWarnings();
    }

    public void setCursorName(String s)
        throws SQLException
    {
        statement.setCursorName(s);
    }

    public void setEscapeProcessing(boolean flag)
        throws SQLException
    {
        statement.setEscapeProcessing(flag);
    }

    public void setFetchDirection(int i)
        throws SQLException
    {
        statement.setFetchDirection(i);
    }

    public void setFetchSize(int i)
        throws SQLException
    {
        statement.setFetchSize(i);
    }

    public void setMaxFieldSize(int i)
        throws SQLException
    {
        statement.setMaxFieldSize(i);
    }

    public void setMaxRows(int i)
        throws SQLException
    {
        statement.setMaxRows(i);
    }

    public void setQueryTimeout(int i)
        throws SQLException
    {
        statement.setQueryTimeout(i);
    }

    protected final LoggedConnection connection;
    protected final Statement statement;
	/* (non-Javadoc)
	 * @see java.sql.Statement#getMoreResults(int)
	 */
	public boolean getMoreResults(int current) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#getGeneratedKeys()
	 */
	public ResultSet getGeneratedKeys() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#executeUpdate(java.lang.String, int)
	 */
	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#executeUpdate(java.lang.String, int[])
	 */
	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#executeUpdate(java.lang.String, java.lang.String[])
	 */
	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#execute(java.lang.String, int)
	 */
	public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#execute(java.lang.String, int[])
	 */
	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#execute(java.lang.String, java.lang.String[])
	 */
	public boolean execute(String sql, String[] columnNames) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	/* (non-Javadoc)
	 * @see java.sql.Statement#getResultSetHoldability()
	 */
	public int getResultSetHoldability() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	public boolean isClosed() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean isPoolable() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public void setPoolable(boolean poolable) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	public boolean isWrapperFor(Class<?> iface) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public <T> T unwrap(Class<T> iface) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}
}